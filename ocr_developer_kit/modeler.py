"""methods to generate synthetic data sets to fit patterns seen in invoice texts"""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/02_modeler.ipynb.

# %% auto 0
__all__ = ['flatten_json_items']

# %% ../nbs/02_modeler.ipynb 4
import json
import pandas as pd
from IPython.display import display

def flatten_json_items(path, rows=50):
    """
    Load JSON and concatenate all 'items' lists into one DataFrame.
    """
    with open(path, "r", encoding="utf-8") as f:
        data = json.load(f)

    if isinstance(data, dict):
        data = [data]

    df = pd.json_normalize(data)

    # Collect all expanded items
    all_items = []
    for idx, row in df.iterrows():
        if isinstance(row.get("items"), list):
            for it in row["items"]:
                # attach invoice-level metadata for context
                record = it.copy()
                record["invoice_number"] = row.get("invoice_number")
                record["invoice_date"] = row.get("invoice_date")
                record["buyer"] = row.get("buyer")
                all_items.append(record)

    items_df = pd.DataFrame(all_items)

    # Return only â€” Jupyter will display nicely once
    return items_df.head(rows)

